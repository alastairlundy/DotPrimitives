# This workflow will build and publish System Extensions to Nuget.

name: Publish to Nuget

on:
  workflow_dispatch:
    
jobs:
  publish-nuget:

    runs-on: ubuntu-latest
    permissions:
      contents: write
      id-token: write 
    environment: production

    steps:
    - uses: actions/checkout@v5.0.0
    - name: Setup .NET
      uses: actions/setup-dotnet@v5.0.0
      with:
        dotnet-version: 9.0.x
        working-directory: DotExtensions
    
    # Get a short-lived NuGet API key
    - name: NuGet login (OIDC â†’ temp API key)
      uses: NuGet/login@d22cc5f58ff5b88bf9bd452535b4335137e24544 # v1.1.0
      id: login
      with:
            user: ${{ secrets.NUGET_USER }}
    
    - name: Restore dependencies
      run: dotnet restore
    - name: Create packages
      run: dotnet build -c Release
    - name: Publish the MAIN package to nuget.org
      run: dotnet nuget push src/DotPrimitives/bin/Release/*.nupkg --api-key ${{steps.login.outputs.NUGET_API_KEY}}  -s https://api.nuget.org/v3/index.json --skip-duplicate
    - name: Publish the DotPrimitives.Collections package to nuget.org
      run: dotnet nuget push src/DotPrimitives.Collections/bin/Release/*.nupkg --api-key ${{steps.login.outputs.NUGET_API_KEY}}  $NUGET_AUTH_TOKEN -s https://api.nuget.org/v3/index.json --skip-duplicate
